{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "description": "Default values for nm-vllm. Declare variables to be passed into your templates.",
  "type": "object",
  "properties": {
    "affinity": {
      "description": "Provide affinity rules for pod scheduling.",
      "type": "object"
    },
    "apiServer": {
      "description": "Configuration for the nm-vllm API server.",
      "type": "object",
      "properties": {
        "extraArgs": {
          "default": [],
          "description": "Extra arguments to pass to the API server command.",
          "type": "array"
        },
        "host": {
          "default": "0.0.0.0",
          "description": "The host that the API server should bind to",
          "type": "string"
        },
        "port": {
          "default": "80",
          "description": "The port that the API server should bind to",
          "type": "integer"
        }
      }
    },
    "fullnameOverride": {
      "type": "string",
      "description": "Provide a name to substitute for the full names of resources."
    },
    "image": {
      "type": "object",
      "description": "Configuration for the application image.",
      "properties": {
        "repository": {
          "default": "ghcr.io/neuralmagic/nm-vllm-openai",
          "description": "The image repository for the application.",
          "type": "string"
        },
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "The pull policy for the image.",
          "pattern": "^(Always|Never|IfNotPresent)$",
          "type": "string"
        },
        "tag": {
          "default": "v0.1.0",
          "description": "The tag of the image to use.",
          "type": "string"
        }
      }
    },
    "livenessProbe": {
      "type": "object",
      "description": "Liveness probe configuration for the container."
    },
    "modelName": {
      "description": "The name of the model to serve",
      "pattern": ".+",
      "examples": [
        "mistralai/Mistral-7B-v0.1"
      ],
      "type": "string"
    },
    "nameOverride": {
      "type": "string",
      "description": "Provide a name to substitute for the name of the chart."
    },
    "nodeSelector": {
      "type": "object",
      "description": "Node labels controlling where the pod will be scheduled."
    },
    "podAnnotations": {
      "type": "object",
      "description": "Annotations to add to the pod."
    },
    "podLabels": {
      "type": "object",
      "description": "Labels to add to the pod."
    },
    "podSecurityContext": {
      "type": "object",
      "description": "Defines the security options the pod should be run with."
    },
    "readinessProbe": {
      "type": "object",
      "description": "Readiness probe configuration for the container.",
      "properties": {
        "httpGet": {
          "type": "object",
          "description": "Specifies the http request to perform.",
          "properties": {
            "path": {
              "type": "string",
              "default": "/health",
              "description": "Path to access on the HTTP server."
            },
            "port": {
              "type": "string",
              "default": "http",
              "description": "Name or number of the port to access on the container."
            }
          }
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the container has started before readiness probes are initiated.",
          "default": 5,
          "type": "integer"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
          "default": 5,
          "type": "integer"
        }
      }
    },
    "replicaCount": {
      "type": "integer",
      "description": "Number of replicas of the pod to run."
    },
    "resources": {
      "type": "object",
      "description": "Compute Resources required by the container."
    },
    "securityContext": {
      "type": "object",
      "description": "Defines the security options the container should be run with."
    },
    "service": {
      "type": "object",
      "description": "Configuration for the service resource.",
      "properties": {
        "annotations": {
          "type": "object",
          "description": "Annotations to add to the service.",
          "default": {}
        },
        "port": {
          "type": "integer",
          "description": "Port to expose on the service.",
          "default": 80
        },
        "type": {
          "type": "string",
          "description": "The kind of service that should be used to make the pod available on the network so that clients can interact with it.",
          "default": "LoadBalancer",
          "examples": [
            "ClusterIP", "LoadBalancer", "NodePort"
          ]
        }
      }
    },
    "tolerations": {
      "type": "array",
      "description": "Tolerations applied to the pod allowing the scheduler to schedule the pod to nodes with matching taints."
    },
    "volumeMounts": {
      "type": "array",
      "description": "Pod volumes to mount into the container's filesystem."
    },
    "volumes": {
      "type": "array",
      "description": "Volumes to make available to the pod."
    }
  },
  "required": [
    "modelName"
  ]
}
